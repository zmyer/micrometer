version: 2
jobs:
  build:
    working_directory: ~/micrometer
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
    docker:
      - image: circleci/openjdk:8-jdk
    steps:

      - checkout

      - restore_cache:
          key: gradle-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: downloadDependencies
          command: ./gradlew downloadDependencies --console=plain

      - save_cache:
          key: gradle-dependencies-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle

      - run:
          name: run tests
          command: ./gradlew test

      - run:
          name: collect test reports
          when: always
          command: |
            mkdir -p ~/micrometer/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/micrometer/test-results/junit/ \;

      - store_test_results:
          path: ~/micrometer/test-results/

      - store_artifacts:
          path: ~/micrometer/test-results/

  deploy:
    working_directory: ~/micrometer
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - restore_cache:
          key: gradle-dependencies-{{ checksum "build.gradle" }}
      - deploy:
          name: Deployment
          command: sh ./gradle/deploy.sh

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - /\d+\.\d+\.x/
            tags:
              only: /^v\d+\.\d+\.\d+(-rc\.\d+)?$/
