plugins {
    id "io.spring.dependency-management" version "1.0.3.RELEASE"
}

apply plugin: 'nebula.optional-base'
apply plugin: 'nebula.facet'

dependencyManagement {
    imports {
        mavenBom 'org.springframework.boot:spring-boot-dependencies:1.5.10.RELEASE'
    }
    dependencies {
        dependency 'org.assertj:assertj-core:3.8.0'
        dependency 'io.projectreactor:reactor-core:3.1.4.RELEASE'
    }
}

repositories {
    // for spring-cloud-test-support
    maven { url 'https://repo.spring.io/libs-milestone' }
}

dependencies {
    compile project(':micrometer-core')

    compile 'org.springframework:spring-beans', optional
    compile 'org.springframework.boot:spring-boot', optional
    compile 'org.springframework.boot:spring-boot-actuator', optional
    compile 'org.springframework.boot:spring-boot-starter-aop', optional
    compile 'org.springframework.boot:spring-boot-starter-security', optional
    compile 'org.springframework:spring-webmvc', optional
    compile 'org.springframework:spring-web', optional
    compile 'javax.servlet:javax.servlet-api:3.1.0', optional
    compile 'org.aspectj:aspectjweaver:1.8.+', optional
    compile 'io.prometheus:simpleclient_pushgateway:latest.release', optional

    ['atlas', 'prometheus', 'datadog', 'elastic', 'ganglia', 'graphite', 'jmx', 'influx', 'statsd', 'new-relic', 'cloudwatch', 'signalfx', 'wavefront', 'dynatrace'].each { sys ->
        compile project(":micrometer-registry-$sys"), optional
    }

    compile project(":micrometer-jersey2"), optional

    compile 'org.springframework.integration:spring-integration-core', optional

    // to validate auto-completion on configuration properties
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testCompile project(':micrometer-test')

    testCompile 'org.springframework.boot:spring-boot-starter-web'
    testCompile 'org.springframework.boot:spring-boot-actuator'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.boot:spring-boot-starter-jersey'

    // for testing DataSource metrics
    testCompile 'org.hsqldb:hsqldb'
    testCompile 'org.springframework.boot:spring-boot-starter-jdbc'
    testCompile 'com.zaxxer:HikariCP'

    // for use in mock servers
    testCompile 'org.apache.tomcat.embed:tomcat-embed-core'

    // for classpath exclusion in tests
    testCompile 'org.springframework.cloud:spring-cloud-test-support:2.+'

    testRuntime 'org.apache.httpcomponents:httpclient:4.5.+'

    testCompile 'org.springframework.integration:spring-integration-java-dsl'
    testCompile 'org.springframework.integration:spring-integration-ws'
    testCompile 'org.springframework.integration:spring-integration-xml'

    testCompile 'org.springframework.security:spring-security-test'

    // required for jdk 9 testing
    testRuntime 'javax.xml.bind:jaxb-api:2.3.0'
    testRuntime 'javax.activation:activation:1.1.1'
    testRuntime 'com.sun.xml.messaging.saaj:saaj-impl:1.4.0'
}
