plugins {
    id 'com.github.johnrengelman.shadow' version '2.0.2'
}

apply plugin: 'org.junit.platform.gradle.plugin'

dependencies {
    compile project(':micrometer-core')
    compile 'io.projectreactor:reactor-core:latest.release'
    compile 'io.projectreactor.ipc:reactor-netty:latest.release'
    compile 'org.pcollections:pcollections:latest.release'

    testCompile project(':micrometer-test')
    testCompile 'io.projectreactor:reactor-test:latest.release'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.+'
    testCompile 'org.mockito:mockito-core:latest.release'
}

shadowJar {
    configurations = [project.configurations.compile]
    classifier = null
    dependencies {
        include(dependency('io.projectreactor:'))
        include(dependency('io.projectreactor.ipc:'))
        include(dependency('org.reactivestreams:reactive-streams'))
        include(dependency('io.netty:'))
        include(dependency('org.pcollections:'))
    }
    relocate 'reactor', 'io.micrometer.shaded.reactor'
    relocate 'org.reactivestreams', 'io.micrometer.shaded.org.reactorstreams'
    relocate 'io.netty', 'io.micrometer.shaded.io.netty'
    relocate 'org.pcollections', 'io.micrometer.shaded.statsd.org.pcollections'
}

jar.deleteAllActions()
jar.dependsOn shadowJar

publishing {
    publications {
        withType(MavenPublication) {
            pom.withXml {
                asNode()
                        .dependencies
                        .dependency
                        .findAll {
                            ['reactor-core', 'reactor-netty', 'pcollections'].contains(it.artifactId.text())
                        }
                        .each { it.parent().remove(it) }
            }
        }
    }
}